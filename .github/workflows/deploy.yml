# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  applicationfolder: spring-boot-hello-world-example

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - uses: actions/checkout@v4

    - uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
        role-session-name: GitHub-Action-Role
        aws-region: ${{ secrets.AWS_REGION }}

    - name: zip the repo revision
      run: zip -r ocss-ci-cd-repo.zip .
    
    - name: upload revision to s3
      run: |
        aws s3 cp *.zip s3://${{secrets.S3_BUCKET}}/

    - name: Set up JDK 1.8
      uses: actions/setup-java@v4
      with:
        java-version: 8
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      working-directory: ${{ secrets.ENV_FOLDER }}
      run: mvn -B package --file pom.xml 

    - name: Upload Artifact to s3
      working-directory: ${{ secrets.ENV_FOLDER }}/target
      run: aws s3 cp *.war s3://${{secrets.S3_BUCKET}}/


  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: Dev
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v4

    - uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
        role-session-name: GitHub-Action-Role
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploying Java Application onto Deployment Group
      run: |
        echo "Deploying branch to dev(env)"
        commit_hash=`git rev-parse HEAD`

        aws deploy create-deployment --application-name ocse-java-application-on-ec2 --deployment-group-name ocse-cicd-java-app-deployment-group --s3-location bucket=${{secrets.S3_BUCKET}},key=ocss-ci-cd-repo.zip,bundleType=zip

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
